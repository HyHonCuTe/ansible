#!/bin/bash
# OpenVAS Automated Scan Script
# Generated by Ansible for user: {{ openvas_ansible_user }}
# Reports saved to: {{ openvas_report_dir }}

set -euo pipefail

# Configuration
ADMIN_USER="{{ openvas_admin_user }}"
ADMIN_PASS="{{ openvas_admin_password }}"
SOCKET="/run/gvmd/gvmd.sock"
REPORT_DIR="{{ openvas_report_dir }}"
XML_DIR="{{ openvas_report_xml_dir }}"
SUMMARY_DIR="{{ openvas_report_summary_dir }}"
LOG_FILE="{{ openvas_log_dir }}/automated-scan.log"

# Scan targets
TARGETS=(
{% for host in groups['scan_targets'] %}
    "{{ hostvars[host]['scan_ip'] }}"
{% endfor %}
)

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    local level=$1
    shift
    local message="$@"
    local timestamp=$(date +'%Y-%m-%d %H:%M:%S')
    
    echo "[$timestamp] [$level] $message" | tee -a "$LOG_FILE"
    
    case $level in
        ERROR)
            echo -e "${RED}[ERROR]${NC} $message" >&2
            ;;
        SUCCESS)
            echo -e "${GREEN}[SUCCESS]${NC} $message"
            ;;
        WARNING)
            echo -e "${YELLOW}[WARNING]${NC} $message"
            ;;
        INFO)
            echo -e "${BLUE}[INFO]${NC} $message"
            ;;
    esac
}

gvm_command() {
    gvm-cli --gmp-username "$ADMIN_USER" \
            --gmp-password "$ADMIN_PASS" \
            socket --socketpath "$SOCKET" \
            --xml "$1" 2>/dev/null
}

get_or_create_target() {
    local target_ip=$1
    local target_name="Target-$target_ip"
    
    local target_id=$(gvm_command "<get_targets/>" | \
                      grep -A5 "$target_name" | \
                      grep -oP 'target id="\K[^"]+' | head -1)
    
    if [ -z "$target_id" ]; then
        log INFO "Creating target for $target_ip"
        target_id=$(gvm_command "<create_target><name>$target_name</name><hosts>$target_ip</hosts></create_target>" | \
                    grep -oP 'id="\K[^"]+' | head -1)
        log SUCCESS "Created target $target_name (ID: $target_id)"
    else
        log INFO "Target $target_name already exists (ID: $target_id)"
    fi
    
    echo "$target_id"
}

create_scan_task() {
    local target_ip=$1
    local target_id=$2
    local task_name="AutoScan-$target_ip-$(date +%Y%m%d-%H%M)"
    
    local config_id=$(gvm_command "<get_configs/>" | \
                      grep -oP 'config id="\K[^"]+' | head -1)
    
    local scanner_id=$(gvm_command "<get_scanners/>" | \
                       grep -oP 'scanner id="\K[^"]+' | head -1)
    
    log INFO "Creating task: $task_name"
    local task_id=$(gvm_command "<create_task><name>$task_name</name><target id='$target_id'/><config id='$config_id'/><scanner id='$scanner_id'/></create_task>" | \
                    grep -oP 'id="\K[^"]+' | head -1)
    
    log SUCCESS "Created task $task_name (ID: $task_id)"
    echo "$task_id"
}

start_scan() {
    local task_id=$1
    local target_ip=$2
    
    log INFO "Starting scan for $target_ip (Task: $task_id)"
    gvm_command "<start_task task_id='$task_id'/>" > /dev/null
    
    log SUCCESS "Scan started for $target_ip"
}

wait_for_scan() {
    local task_id=$1
    local target_ip=$2
    local max_wait={{ openvas_scan_timeout }}
    local elapsed=0
    local check_interval=30
    
    log INFO "Waiting for scan of $target_ip to complete..."
    
    while [ $elapsed -lt $max_wait ]; do
        local status=$(gvm_command "<get_tasks task_id='$task_id'/>" | \
                       grep -oP '<status>\K[^<]+' | head -1)
        
        local progress=$(gvm_command "<get_tasks task_id='$task_id'/>" | \
                        grep -oP '<progress>\K[^<]+' | head -1)
        
        if [ "$status" == "Done" ]; then
            log SUCCESS "Scan completed for $target_ip"
            return 0
        elif [ "$status" == "Stopped" ] || [ "$status" == "Interrupted" ]; then
            log ERROR "Scan stopped/interrupted for $target_ip (Status: $status)"
            return 1
        fi
        
        log INFO "Scan in progress for $target_ip - Status: $status, Progress: ${progress:-0}%"
        sleep $check_interval
        elapsed=$((elapsed + check_interval))
    done
    
    log ERROR "Scan timeout for $target_ip after ${max_wait}s"
    return 1
}

export_report() {
    local task_id=$1
    local target_ip=$2
    
    log INFO "Exporting report for $target_ip"
    
    local report_id=$(gvm_command "<get_tasks task_id='$task_id'/>" | \
                      grep -oP 'last_report.*?report id="\K[^"]+' | head -1)
    
    if [ -z "$report_id" ]; then
        log ERROR "No report found for task $task_id"
        return 1
    fi
    
    # Tạo thư mục nếu chưa có
    mkdir -p "$XML_DIR" "$SUMMARY_DIR"
    
    local report_file="$XML_DIR/report-$target_ip-$(date +%Y%m%d-%H%M%S).xml"
    gvm_command "<get_reports report_id='$report_id' format_id='a994b278-1f62-11e1-96ac-406186ea4fc5'/>" > "$report_file"
    
    # Set permissions for user
    chown {{ openvas_ansible_user }}:{{ openvas_ansible_user }} "$report_file"
    chmod 644 "$report_file"
    
    log SUCCESS "Report saved: $report_file"
    echo "$report_file"
}

# Main execution
main() {
    log INFO "========================================="
    log INFO "OpenVAS Automated Scan Started"
    log INFO "========================================="
    log INFO "User: {{ openvas_ansible_user }}"
    log INFO "Targets: ${#TARGETS[@]}"
    log INFO "Report directory: $REPORT_DIR"
    log INFO "Date: $(date +'%Y-%m-%d %H:%M:%S')"
    
    # Create report directories
    mkdir -p "$XML_DIR" "$SUMMARY_DIR"
    chown -R {{ openvas_ansible_user }}:{{ openvas_ansible_user }} "$REPORT_DIR"
    
    local scan_results=()
    
    # Process each target
    for target_ip in "${TARGETS[@]}"; do
        log INFO "Processing target: $target_ip"
        
        target_id=$(get_or_create_target "$target_ip")
        
        if [ -z "$target_id" ]; then
            log ERROR "Failed to create/get target for $target_ip"
            continue
        fi
        
        task_id=$(create_scan_task "$target_ip" "$target_id")
        
        if [ -z "$task_id" ]; then
            log ERROR "Failed to create task for $target_ip"
            continue
        fi
        
        start_scan "$task_id" "$target_ip"
        
        if wait_for_scan "$task_id" "$target_ip"; then
            report_file=$(export_report "$task_id" "$target_ip")
            scan_results+=("$report_file")
        else
            log ERROR "Scan failed for $target_ip"
        fi
        
        log INFO "---"
    done
    
    # Generate summary
    if [ ${#scan_results[@]} -gt 0 ]; then
        log INFO "Generating summary report..."
        local summary_file="$SUMMARY_DIR/summary-$(date +%Y%m%d-%H%M%S).txt"
        python3 /usr/local/bin/openvas-parser.py "${scan_results[@]}" > "$summary_file" 2>&1
        
        # Set permissions
        chown {{ openvas_ansible_user }}:{{ openvas_ansible_user }} "$summary_file"
        chmod 644 "$summary_file"
        
        log SUCCESS "Summary saved: $summary_file"
        
        # Display summary
        echo ""
        cat "$summary_file"
    fi
    
    log INFO "========================================="
    log INFO "OpenVAS Automated Scan Completed"
    log INFO "Total targets scanned: ${#scan_results[@]}/${#TARGETS[@]}"
    log INFO "Reports location: $REPORT_DIR"
    log INFO "========================================="
}

# Run main function
main "$@"
