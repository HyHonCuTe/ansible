---
# OpenVAS Scan Tasks - Manual Web UI Instructions
# Updated: 2025-10-19 08:56:23 UTC
# User: HyHonCuTe

- name: Check if scan_targets group exists
  set_fact:
    has_scan_targets: "{{ 'scan_targets' in groups and groups['scan_targets'] | length > 0 }}"

- name: Collect scan target IPs
  set_fact:
    target_ips: "{{ groups['scan_targets'] | map('extract', hostvars, 'scan_ip') | select | list }}"
  when: has_scan_targets

- name: Set empty target list if no targets
  set_fact:
    target_ips: []
  when: not has_scan_targets

- name: Display scan targets
  debug:
    msg:
      - "╔════════════════════════════════════════╗"
      - "║   Scan Targets Found                   ║"
      - "╚════════════════════════════════════════╝"
      - "Count: {{ target_ips | length }}"
      - "IPs: {{ target_ips | join(', ') if target_ips | length > 0 else 'None' }}"

- name: Skip if no targets
  block:
    - name: Display no targets message
      debug:
        msg:
          - "⚠️  No scan targets found!"
          - "Add targets to inventory/hosts.yaml under 'scan_targets' group"
    
    - name: End play
      meta: end_play
  when: target_ips | length == 0

# Check OpenVAS readiness
- name: Check container health
  shell: docker inspect {{ openvas_container_prefix }}-allinone --format='{% raw %}{{.State.Health.Status}}{% endraw %}'
  register: container_health
  changed_when: false
  failed_when: false

- name: Check web UI accessibility
  uri:
    url: "http://localhost:{{ openvas_web_port }}"
    method: GET
    status_code: [200, 302, 405]
    timeout: 5
  register: web_check
  failed_when: false

- name: Display OpenVAS readiness status
  debug:
    msg:
      - "════════════════════════════════════════"
      - "OpenVAS Status:"
      - "  Container Health: {{ container_health.stdout | default('unknown') }}"
      - "  Web UI: {{ 'Accessible ✅' if web_check is defined and web_check.status is defined and web_check.status in [200, 302, 405] else 'Not ready ⏳' }}"
      - "════════════════════════════════════════"

- name: Create detailed scan instructions file
  copy:
    content: |
      # OpenVAS Scanning Guide
      # Created: 2025-10-19 08:56:23 UTC
      # User: HyHonCuTe
      # Repository: HyHonCuTe/ansible
      
      ## Web UI Access
      
      URL: http://localhost:{{ openvas_web_port }}
      Username: {{ openvas_admin_user }}
      Password: {{ openvas_admin_password }}
      
      ## Targets to Scan
      
      {% if target_ips | length > 0 %}
      {% for ip in target_ips %}
      - {{ ip }}
      {% endfor %}
      {% else %}
      No targets defined. Add to inventory/hosts.yaml.
      {% endif %}
      
      ## Step-by-Step Scanning Guide
      
      ### Step 1: Login to Web UI
      
      1. Open browser: http://localhost:{{ openvas_web_port }}
      2. Enter credentials:
         - Username: {{ openvas_admin_user }}
         - Password: {{ openvas_admin_password }}
      3. Click "Sign In"
      
      ### Step 2: Create Target
      
      1. In top menu, click **Configuration**
      2. Click **Targets**
      3. Click **⭐** icon (New Target)
      4. Fill in form:
         - **Name:** Linux Servers
         - **Hosts:** {{ target_ips | join(', ') if target_ips | length > 0 else '192.168.1.69' }}
         - **Port List:** OpenVAS Default (leave default)
         - **Alive Test:** ICMP Ping (leave default)
      5. Click **Save**
      
      ### Step 3: Create Scan Task
      
      1. In top menu, click **Scans**
      2. Click **Tasks**
      3. Click **⭐** icon (New Task)
      4. Fill in form:
         - **Name:** Vulnerability Scan {{ ansible_date_time.date }}
         - **Scan Targets:** Select "Linux Servers" from dropdown
         - **Scan Config:** Full and fast
         - **Scanner:** OpenVAS Default
         - **Schedule:** -- (leave empty for manual)
      5. Click **Save**
      
      ### Step 4: Start Scan
      
      1. In Tasks list, find "Vulnerability Scan {{ ansible_date_time.date }}"
      2. Click **▶️** (Start icon) in the Actions column
      3. Confirm if prompted
      4. Monitor progress:
         - Progress bar shows completion percentage
         - Status changes: Requested → Running → Done
         - Typical scan time: 30-60 minutes
      
      ### Step 5: View Results
      
      1. When Status = **Done**
      2. In top menu, click **Scans**
      3. Click **Reports**
      4. Click on the latest report (will have timestamp)
      5. View summary:
         - High/Medium/Low severity counts
         - Affected hosts
         - CVE details
      
      ### Step 6: Export Report
      
      1. In report view, click **Download** icon (↓)
      2. Select format:
         - **XML** for detailed data
         - **PDF** for readable document
         - **CSV** for spreadsheet
      3. Save to: {{ role_path }}/reports/xml/
      4. Manually copy exported file to reports directory
      
      ## Quick Reference
      
      ### Target IPs
      ```
      {% for ip in target_ips %}
      {{ ip }}
      {% endfor %}
      ```
      
      ### Container Commands
      
      ```bash
      # Check status
      sudo docker ps --filter name={{ openvas_container_prefix }}
      
      # View logs
      sudo docker logs -f {{ openvas_container_prefix }}-allinone
      
      # Restart container
      cd /opt/openvas && sudo docker compose restart
      
      # Check health
      sudo docker inspect {{ openvas_container_prefix }}-allinone --format='{% raw %}{{.State.Health.Status}}{% endraw %}'
      ```
      
      ### Helper Commands
      
      ```bash
      openvas-helper status
      openvas-helper logs
      openvas-helper web
      /tmp/check-openvas.sh
      ```
      
      ## Troubleshooting
      
      ### Container not healthy
      ```bash
      # Check feed sync progress
      sudo docker logs {{ openvas_container_prefix }}-allinone 2>&1 | grep -i "sync\|feed"
      
      # Wait for "Feed synchronization successful"
      ```
      
      ### Web UI not accessible
      ```bash
      # Check port
      sudo ss -tlnp | grep {{ openvas_web_port }}
      
      # Test HTTP
      curl -I http://localhost:{{ openvas_web_port }}
      ```
      
      ### Scan taking too long
      - Typical scan time: 30-60 minutes for single host
      - Can be 2-4 hours for complex networks
      - Monitor progress in Web UI
      
      ## Report Locations
      
      - Manual exports: Save to {{ role_path }}/reports/xml/
      - Summaries: {{ role_path }}/reports/summaries/
      - Archives: {{ role_path }}/reports/archive/
      
      ## Automated Scanning (Future)
      
      Will be implemented using:
      - Python script with python-gvm library
      - Direct GMP protocol access
      - Automatic report export and parsing
      
      For now, follow manual steps above.
      
      ---
      End of Guide
    dest: "{{ role_path }}/reports/SCAN-GUIDE.txt"
    mode: '0644'

- name: Display manual scanning instructions
  debug:
    msg:
      - ""
      - "╔════════════════════════════════════════════════╗"
      - "║   OpenVAS Manual Scanning Instructions         ║"
      - "╚════════════════════════════════════════════════╝"
      - ""
      - "✅ Container: {{ container_health.stdout | default('checking...') }}"
      - "✅ Web UI: {{ 'Ready' if web_check is defined and web_check.status is defined and web_check.status in [200, 302, 405] else 'Not Ready' }}"
      - ""
      - "🌐 Web Interface:"
      - "   URL: http://localhost:{{ openvas_web_port }}"
      - "   Username: {{ openvas_admin_user }}"
      - "   Password: {{ openvas_admin_password }}"
      - ""
      - "🎯 Targets ({{ target_ips | length }}):"
      - "{{ target_ips | map('regex_replace', '^(.*)$', '   • \\1') | join('\n') }}"
      - ""
      - "📋 Quick Steps:"
      - "   1. Login → Configuration → Targets → ⭐ New"
      - "      Hosts: {{ target_ips | join(', ') }}"
      - "   2. Scans → Tasks → ⭐ New"
      - "      Target: (select), Config: Full and fast"
      - "   3. Click ▶️ Start"
      - "   4. Wait 30-60 minutes"
      - "   5. Scans → Reports → View results"
      - ""
      - "📁 Full guide:"
      - "   {{ role_path }}/reports/SCAN-GUIDE.txt"
      - ""
      - "   cat {{ role_path }}/reports/SCAN-GUIDE.txt"
      - ""
      - "╚════════════════════════════════════════════════╝"

- name: Create quick reference card
  copy:
    content: |
      ╔════════════════════════════════════════════════╗
      ║        OpenVAS Quick Reference Card            ║
      ╚════════════════════════════════════════════════╝
      
      🌐 Web UI: http://localhost:{{ openvas_web_port }}
      👤 Login: {{ openvas_admin_user }} / {{ openvas_admin_password }}
      
      🎯 Targets: {{ target_ips | join(', ') if target_ips | length > 0 else 'None' }}
      
      📋 Scan Steps:
      1. Configuration → Targets → ⭐ New
      2. Scans → Tasks → ⭐ New
      3. Click ▶️ Start
      4. Scans → Reports → View
      
      📁 Reports: {{ role_path }}/reports/
      
      🔧 Commands:
        openvas-helper status
        openvas-helper web
        openvas-helper logs
      
      📖 Full guide:
        cat {{ role_path }}/reports/SCAN-GUIDE.txt
    dest: "{{ role_path }}/reports/QUICK-REFERENCE.txt"
    mode: '0644'

- name: Final scan setup message
  debug:
    msg:
      - ""
      - "✅ Scan setup complete!"
      - ""
      - "📖 Guides created:"
      - "   • {{ role_path }}/reports/SCAN-GUIDE.txt"
      - "   • {{ role_path }}/reports/QUICK-REFERENCE.txt"
      - ""
      - "🚀 Start scanning:"
      - "   firefox http://localhost:{{ openvas_web_port }}"
      - ""
      - "💡 Tip: Keep guide open while scanning"
      - "   cat {{ role_path }}/reports/SCAN-GUIDE.txt"
      - ""
