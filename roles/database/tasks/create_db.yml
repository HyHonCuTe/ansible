- name: Kiểm tra nếu database đã tồn tại
  win_shell: |
    $server = "{{ sql_instance }}"
    $database = "{{ db_name }}"
    $connectionString = "Server=$server;Database=master;User Id={{ sql_user }};Password={{ sql_password }};"
    $query = "IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = '$database') CREATE DATABASE $database;"
    Invoke-Sqlcmd -ConnectionString $connectionString -Query $query
  environment:
    PATH: "C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn\\;{{ ansible_env.PATH }}"

# Copy file SQL từ máy control sang máy target
- name: Copy file SQL từ máy control sang máy target
  win_copy:
    src: "{{ sql_file_on_control }}"  # Đường dẫn file SQL trên máy control
    dest: "{{ sql_script_path }}"     # Đường dẫn nơi file sẽ được lưu trên máy target

# Thực thi script SQL trên máy target
- name: Thực thi script SQL trên máy target
  win_shell: |
    sqlcmd -S {{ sql_instance }} -U {{ sql_user }} -P {{ sql_password }} -i {{ sql_script_path }}
  environment:
    PATH: "C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn\\;{{ ansible_env.PATH }}"

- name: Lấy trạng thái dịch vụ SQL Server (MSSQLSERVER)
  win_service:
    name: MSSQLSERVER
  register: sql_service_status

- name: Hiển thị trạng thái dịch vụ SQL Server
  debug:
    msg: >
      Trạng thái dịch vụ SQL Server: {{ sql_service_status.status.state }},
      chế độ khởi động: {{ sql_service_status.status.start_mode }}

# # Optional: Kiểm tra kết quả thực thi
# $serverName = "localhost"  # Tên máy chủ hoặc IP của SQL Server
# $query = "SELECT name FROM sys.databases"
# $result = Invoke-Sqlcmd -ServerInstance $serverName -Query $query
# $result

# # Optional: Kiểm tra kết quả thực thi
# $serverName = "localhost"
# $databaseName = "NameDb"
# $query = "SELECT * FROM Person"

# $result = Invoke-Sqlcmd -ServerInstance $serverName -Database $databaseName -Query $query
# $result


